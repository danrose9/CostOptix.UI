trigger:
  - none

pool:
  vmImage: ubuntu-latest

variables:
  tenantId: 90598989-b884-4fc1-999f-d176a8e1a54e
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]
  envDev: dev
  envProd: prod
  kvServiceConnectionDev: DEV KV Service Connection
  kvServiceConnectionProd: PROD KV Service Connection
  subscriptionId: 94e4237e-953e-4c21-9a4e-fc3f3699d9e4
  kvServiceConnection: DEV KV Service Connection
  apiUrlDev: 'https://api.dev.costoptix.com'
  apiUrlProd: 'https://api.costoptix.com'

stages:
  - stage: BuildAndTestStageDev
    displayName: Build and Test Dev
    jobs:
      - job: BuildDev
        displayName: Build and Test Dev
        steps:
          - template: ./templates/build.ui.yaml
            parameters:
              tenantId: ${{variables.tenantId}}
              environment: ${{variables.envDev}}
              subscriptionId: ${{variables.subscriptionId}}
              kvServiceConnection: ${{variables.kvServiceConnectionDev}}
              apiUrl: ${{variables.apiUrlDev}}
              adoEnvironment: ${{variables.adoEnvironment}}
              runTests: true
  - stage: BuildAndTestStage
    displayName: Build and Test Prod
    jobs:
      - job: BuildProd
        displayName: Build and Test Prod
        dependsOn: BuildDev
        condition: succeeded('BuildDev')
        steps:
          - template: ./templates/build.ui.yaml
            parameters:
              tenantId: ${{variables.tenantId}}
              environment: ${{variables.envProd}}
              subscriptionId: ${{variables.subscriptionId}}
              kvServiceConnection: ${{variables.kvServiceConnectionProd}}
              apiUrl: ${{variables.apiUrlProd}}
              adoEnvironment: ${{variables.adoEnvironment}}
              runTests: false

  # - stage: Deploy_Dev_Stage
  #   displayName: Deploy Dev
  #   dependsOn: BuildAndTestStage
  #   condition: and(succeeded(), eq(variables.isPullRequest, 'false'))
  # - stage: Deploy_Prod_Stage
  #   displayName: Deploy Prod
  #   dependsOn: BuildAndTestStage
  #   condition: and(succeeded(), eq(variables.isPullRequest, 'false'))

  # jobs:
  #   - job: BuildAndTestJob
  #     displayName: Build and Test
  #     condition: eq(variables['build.sourceBranch'], 'refs/heads/main')
  #     steps:
  #       - template: ./templates/build.ui.yaml
  #         parameters:
  #           tenantId: ${{variables.tenantId}}
  #           environment: ${{variables.envDev}}
  #           subscriptionId: ${{variables.subscriptionId}}
  #           kvServiceConnection: ${{variables.kvServiceConnectionDev}}
  #           apiUrl: ${{variables.apiUrlDev}}
  #           adoEnvironment: ${{variables.adoEnvironment}}

  # condition: eq(variables['build.sourceBranch'], 'refs/heads/develop')

  # jobs:
  #   - job: BuildDev
  #     displayName: Build Dev
  #     steps:
  #       - script: |
  #           npm install
  #           npm run build-dev
  #         displayName: npm install, build
  #       - script: (cd build && zip -r $(Build.ArtifactStagingDirectory)/build-dev.zip .)
  #         displayName: Zip Deployment
  #         condition: and(succeeded(), eq(variables.isPullRequest, 'false'))
  #       - publish: $(Build.ArtifactStagingDirectory)/build-dev.zip
  #         displayName: Publish Artifacts
  #         condition: and(succeeded(), eq(variables.isPullRequest, 'false'))
  #         artifact: App-dev

  # - stage: Deploy_Dev_Stage
  #   displayName: Deploy Dev
  #   dependsOn: Build_Dev_Stage
  #   condition: and(succeeded(), eq(variables.isPullRequest, 'false'))
  #   jobs:
  #     - deployment: DeployDevJob
  #       displayName: Deploy DEV
  #       environment: DEV-App
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - template: _template-deploy.yaml
  #                 parameters:
  #                   Env: $(env)
  #                   SubscriptionId: $(subscriptionId)
  #                   KVServiceConnection: $(kvServiceConnection)
