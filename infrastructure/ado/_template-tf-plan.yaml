parameters:
  - name: Env
    type: string
  - name: SubscriptionId
    type: string
  - name: KVServiceConnection
    type: string
  - name: ApiUrl
    type: string

steps:
  - task: AzureKeyVault@2
    displayName: Load In Secrets
    inputs:
      connectedServiceName: ${{ Parameters.KVServiceConnection }}
      KeyVaultName: costoptix-${{ Parameters.Env }}-devops-kv

  - template: _template-pin-tf-version.yaml

  - bash: |
      terraform -chdir=infrastructure/tf init \
        -backend-config="storage_account_name=$TF_STORAGE_ACCOUNT_NAME" \
        -backend-config="container_name=$TF_CONTAINER_NAME" \
        -backend-config="key=$TF_KEY" \
        -backend-config="access_key=$TF_ACCESS_KEY"
    displayName: Terraform Init
    env:
      TF_STORAGE_ACCOUNT_NAME: costoptix${{ Parameters.Env }}tf
      TF_CONTAINER_NAME: costoptix${{ Parameters.Env }}tfstate
      TF_KEY: costoptix-ui.tfstate
      TF_ACCESS_KEY: $(tf-access-key)

  - bash: |
      terraform -chdir=infrastructure/tf plan \
        -var "costoptix_rg={\"name\":\"costoptix-$ENVIRONMENT-rg\",\"location\":\"eastus\"}" \
        -var "environment=$ENVIRONMENT" \
        -var "api_url=$API_URL" \
        -out ${{ Parameters.Env }}.tfplan
    displayName: Terraform Plan
    env:
      ARM_SUBSCRIPTION_ID: ${{ Parameters.SubscriptionId }}
      ARM_CLIENT_ID: $(devops-app-clientid)
      ARM_CLIENT_SECRET: $(devops-app-clientsecret)
      ARM_TENANT_ID: $(tenantId)
      ARM_SKIP_PROVIDER_REGISTRATION: true
      ENVIRONMENT: ${{ Parameters.Env }}
      API_URL: ${{ Parameters.ApiUrl }}

  - script: (cd infrastructure/tf && zip -r $(Build.ArtifactStagingDirectory)/tfplan-${{ Parameters.Env }}.zip .)
    displayName: Zip Plan
    condition: and(succeeded(), eq(variables.isPullRequest, 'false'))

  - publish: $(Build.ArtifactStagingDirectory)/tfplan-${{ Parameters.Env }}.zip
    displayName: Publish Artifacts
    condition: and(succeeded(), eq(variables.isPullRequest, 'false'))
    artifact: TF-${{ Parameters.Env }}
