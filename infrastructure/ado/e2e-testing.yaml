# .e2e-testing.yaml
stages:

# Build the application and install dependencies
  - stage: build:
    image: node:14-alpine
    script:
      - npm install
      - npm run build-dev

# Build and push a Docker image of the application
  - stage: dockerize
    image: docker:stable
    services:
      - docker:dind
    before_script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
      - docker build --build-arg NODE_ENV=development -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
      - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

# Run Cypress tests against the Docker image
  - stage: test
    image: cypress/base:14.17.0
    services:
      - docker:dind
    script:
      - docker run --rm -v $PWD:/app -w /app $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA npm install
      - docker run --rm -v $PWD:/app -w /app -e CYPRESS_baseUrl=http://$CI_PROJECT_URL $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA npx cypress run
